{
    "name": "Corporation Name",
    "namespace": "{{CorporationNamespace}}",
    "description": "Corporation Description",
    "charta": "Prompt segment defining which tasks the corporation is designed to process, intended to allow for the screening of requests.",
    "units": [
      {
        "name": "Unit Name",
        "description": "Unit Description",
        "dataSets": [
          {
            "name": "Dataset Name. Datasets are saved to the database on a per-project bases and are linked to units.",
            "completion": "Write an example input prompt to elicit the response structure defined below.",
            "structure": {
              "parameterName": "Set any number of parameters and default values here."
            }
          }
        ],
        "agents": [
          {
            "name": "Agent Name",
            "model": "Model Name",
            "api": "URL of the api serving the model",    
            "role": "Explain, who the agent is and what their role in the network is. This will be set as the system prompt for the model. You can incorporate certain variables in here using double curly braces:\nCorporation values: {{corporation.Name}}, {{corporation.Charta}}, {{corporation.Description}}\nDataset values: {{internal.DataSetName.ParameterName}} will return the value of ParameterName from the current state of the DataSet within the project. 'internal' is a shorthand for the agent's unit. Instead, the name of any unit within the corporation can also be used to access DataSets from other units.",
            "outputModel": "internal.DatasetName //Comment: Can also be set to false to receive text output. This DataSet's default values, converted to JSON, will be appended to each prompt to this agent with the instructions to respond using its structure.",
            "validateOutput": true
          }
        ],
        "defaultReceiver": {
          "type": "AGENT //Comment: can currently only be AGENT",
          "name": "Agent Name"
        }
      }
    ],
    "transitions": [
      {
        "type": "AGENT //Comment: can be UNIT, AGENT, or FUNCTION",
        "name": "Name of the Transition Class",
        "agent": "unitname.agentname //Comment: use dot-notation to get a specific agent belonging to a unit, or use the unit name to utilize the defaultReceiver, if the type of this transition is 'UNIT'. Use the FUNCTION type if you want to implement your own transition logic and name your transition function here."
      }
    ]
  }
  